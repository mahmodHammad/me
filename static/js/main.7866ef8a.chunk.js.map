{"version":3,"sources":["shared/Navbar/Navbar.jsx","pages/Home/Home.jsx","pages/Projects/Project.jsx","App/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","logo","flexGrow","justifyContent","fontWeight","marginLeft","nav","background","navbar","study","padding","marginRight","Icon","color","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Navbar","todo","removeFromTodo","communities","getCommunity","useState","classes","AppBar","disableGutters","className","Toolbar","Button","component","Link","to","size","Typography","align","logoText","variant","root","marginTop","gutterBottom","App","state","cutumeTheme","primary","main","secondary","light","contrastText","default","success","error","createMuiTheme","palette","clearLocalStorage","localStorage","clear","gettodo","getItem","JSON","parse","this","setState","configureAnchors","scrollDuration","style","minHeight","CssBaseline","basename","process","exact","path","render","Projects","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7866ef8a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n// import Sidebar from \"./Sidebar/Sidebar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logo: {\r\n    flexGrow: 1,\r\n    justifyContent: \"left\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: -5\r\n  },\r\n  nav: { background: \"#eeea\" },\r\n  navbar: { background: \"#00f\" },\r\n  study: {\r\n    padding: \"2px 8px\",\r\n    // fontSize: \"0.7rem\",\r\n    marginRight: 3\r\n  },\r\n  Icon: {\r\n    color: \"#eee\",\r\n    marginRight: -4\r\n  }\r\n  //   \"@media (max-width: 600px)\": {\r\n  //     study: {\r\n  //       fontSize: \"0.6rem\",\r\n  //       padding: \"2px 6px\"\r\n  //     },\r\n  //     logoText: { fontSize: \"0.8rem\" },\r\n  //     logo:{\r\n  //       marginLeft:-10\r\n  //     }\r\n  //   }\r\n}));\r\n\r\n// will be deprecated XXX\r\nlet year = \"Mahmoud\";\r\nlet department = \"Hammad\";\r\n// XXXXXXXXXXXXXXXXXXXXXX\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nexport default function Navbar({\r\n  todo,\r\n  removeFromTodo,\r\n  communities,\r\n  getCommunity,\r\n  props\r\n}) {\r\n  const [open, setopen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <HideOnScroll {...props}>\r\n        <AppBar\r\n          disableGutters={true}\r\n          color=\"transparent\"\r\n          className={classes.nav}\r\n        >\r\n          <Toolbar className={classes.nav}>\r\n            <div className={classes.logo}>\r\n              <Button color=\"inherit\" component={Link} to=\"/\" size=\"large\">\r\n                <Typography\r\n                  align=\"left\"\r\n                  color=\"inherit\"\r\n                  className={classes.logoText}\r\n                >\r\n                  {year}\r\n                </Typography>\r\n                <Typography color=\"secondary\" className={classes.logoText}>\r\n                  {department}\r\n                </Typography>\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              size=\"large\"\r\n              className={classes.study}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              component={Link}\r\n              to=\"/projects\"\r\n            >\r\n              My Projects\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n\r\n      {/* <Sidebar\r\n        open={open}\r\n        setopen={setopen}\r\n        todo={todo}\r\n        removeFromTodo={removeFromTodo}\r\n        communities={communities}\r\n        getCommunity={getCommunity}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n// import Sidebar from \"./Sidebar/Sidebar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop:120,\r\n    padding: 20\r\n  }\r\n  //   \"@media (max-width: 600px)\": {\r\n  //     study: {\r\n  //       fontSize: \"0.6rem\",\r\n  //       padding: \"2px 6px\"\r\n  //     },\r\n  //     logoText: { fontSize: \"0.8rem\" },\r\n  //     logo:{\r\n  //       marginLeft:-10\r\n  //     }\r\n  //   }\r\n}));\r\n\r\nexport default function Navbar({\r\n  todo,\r\n  removeFromTodo,\r\n  communities,\r\n  getCommunity,\r\n  props\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography align=\"center\" variant=\"h2\" component=\"h1\" gutterBottom color=\"primary\">\r\n        Full-stack web developer\r\n      </Typography>\r\n      <Typography align=\"center\" variant=\"h6\"  component=\"h2\" color=\"primary\">\r\n      I design and code beautifully simple things, and I love what I do.\r\n      </Typography>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n// import Sidebar from \"./Sidebar/Sidebar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop:120,\r\n    padding: 20\r\n  }\r\n  //   \"@media (max-width: 600px)\": {\r\n  //     study: {\r\n  //       fontSize: \"0.6rem\",\r\n  //       padding: \"2px 6px\"\r\n  //     },\r\n  //     logoText: { fontSize: \"0.8rem\" },\r\n  //     logo:{\r\n  //       marginLeft:-10\r\n  //     }\r\n  //   }\r\n}));\r\n\r\nexport default function Navbar({}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography align=\"center\" variant=\"h2\" component=\"h1\" gutterBottom color=\"primary\">\r\n       My Projects\r\n      </Typography>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n// installed components ---------------------\r\nimport { configureAnchors } from \"react-scrollable-anchor\";\r\n// Mui Components -------------------------------\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { link, BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./../shared/Navbar/Navbar\";\r\nimport Home from \"../pages/Home/Home\"\r\nimport Projects from \"../pages/Projects/Project\"\r\n// #FFC107 light\r\nexport default class App extends Component {\r\n  state = {\r\n    cutumeTheme: {\r\n      primary: {\r\n        main: \"#333\"\r\n      },\r\n      secondary: {\r\n        light: \"#fff\",\r\n        main: \"#FFA000\",\r\n        contrastText: \"#000\"\r\n      },\r\n      background: {\r\n        default: \"#fefaff\"\r\n      },\r\n      success: {\r\n        main: \"#43ff54\"\r\n      },\r\n      error: {\r\n        main: \"#f44336\"\r\n      }\r\n    }\r\n  };\r\n  theme = createMuiTheme({\r\n    palette: this.state.cutumeTheme\r\n  });\r\n\r\n  // XXX will be deprecated XXX\r\n  // changeThemeOnce = (main, sec, value) => {\r\n  //   let oldTheme = { ...this.state.cutumeTheme };\r\n  //   oldTheme[main][sec] = value;\r\n  //   this.setState({ cutumeTheme: oldTheme });\r\n\r\n  //   this.theme = createMuiTheme({\r\n  //     palette: this.state.cutumeTheme\r\n  //   });\r\n  // };\r\n\r\n  // changeTheme = (\r\n  //   main = this.state.cutumeTheme.primary.main,\r\n  //   sec = this.state.cutumeTheme.secondary.main,\r\n  //   bg = this.state.cutumeTheme.background.default\r\n  // ) => {\r\n  //   let oldTheme = { ...this.state.cutumeTheme };\r\n  //   oldTheme.primary.main = main;\r\n  //   oldTheme.secondary.main = sec;\r\n  //   oldTheme.background.default = bg;\r\n  //   this.setState({ cutumeTheme: oldTheme });\r\n\r\n  //   this.theme = createMuiTheme({\r\n  //     palette: this.state.cutumeTheme\r\n  //   });\r\n  // };\r\n\r\n  clearLocalStorage = () => {\r\n    window.localStorage.clear();\r\n  };\r\n\r\n  componentDidMount() {\r\n    let gettodo = window.localStorage.getItem(\"todo\");\r\n    if (gettodo) {\r\n      let todo = JSON.parse(gettodo);\r\n      this.setState({ todo });\r\n    }\r\n    configureAnchors({ scrollDuration: 0 });\r\n  }\r\n\r\n  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  render() {\r\n    const { theme } = this;\r\n    return (\r\n      <div\r\n        className=\"App\"\r\n        style={{\r\n          background: theme.palette.background.default,\r\n          minHeight: \"100vh\"\r\n        }}\r\n      >\r\n        <MuiThemeProvider theme={theme}>\r\n          {/* <MuiThemeProvider> */}\r\n          <CssBaseline />\r\n          <div\r\n            className=\"App\"\r\n            style={{ background: theme.palette.background.default }}\r\n          >\r\n            \r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n              <Navbar />\r\n              \r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  render={props => (\r\n                    <Home\r\n                      {...props}\r\n                    />\r\n                    )}\r\n                    />\r\n                <Route exact path=\"/Projects\" component={Projects} />\r\n                \r\n              </Switch>\r\n            </BrowserRouter>\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n/*\r\n\r\n*/\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}